1/14/2024: Weave 3.2i
Added:
* ISDARK with values greater than 1 drains torches faster.
* MAXBULLETS can be set to values 0-127, or -1 for unlimited.
* TIMELIMIT will set the board time limit to a different value.


12/22/2023: Weave 3.2h
Changes:
* Games in a 'RELEASE' configuration that have no 'S'ave keybind in-game also no longer have a 'R'estore keybind on their title screen.


12/10/2023: Weave 3.2g
Fixes:
* Games without .CHR files would try to load GAMENAME.CHR after every board transition.


10/28/2023: Weave 3.2f
Additions:
* #Send Object:End now causes the object to stop executing code as though it had just issued a #END command.

Removals:
* TEMPLATE.CFG has been removed. EXTENDED.CFG has been renamed to TEMPLATE.CFG.

Changes:
* INSTRUCTIONS.TXT for WEBWEAVE has been updated.

Bugfixes:
* .CHR-per-board loading failed on future boards if it failed to find a file on a previous board.

10/22/2023: Weave 3.2e
Improvements:
* QUICKSAVE and QUICKLOAD now let you save and load files in subdirectories.
* WEAVEDMO is expanded with new information about #BOARD and EDGE<dir>
* The intro HTML file is updated.


10/18/2023: Weave 3.2d
Additions:
* Added EDGEN, EDGES, EDGEE and EDGEW read-only counters to grab the Board IDs for linked boards. (unlinked boards have an ID of 0.)

10/17/2023: Weave 3.2c
Bugfixes:
* Had a regression which disabled the cheat menu.

New features:
* .INI file version update: Custom Sidebar counters can display an associated Element.


10/8/2023: Weave 3.2b
Bugfixes:
* When attempting to load a [H]elp file that does not exist, .CHR loading would become disabled until the world file was closed and reopened.


10/4/2023: Weave 3.2a
Bugfixes:
* Title screen .PAL loading now consistent.
* In-game .PAL manipulation now consistent.
* Game correctly returns to .PAL file colors when prompted to save or quit.
* Title screen/initial board .CHR loading now consistent.
* per-board .CHR files now correctly isolated to their specific board.
* Saving and loading ZZT worlds now correctly restores .CHR and .PAL as well as changes due to #PALETTE.
* Updated documentation.


9/23/2023: Weave 3.2
Removed:
* KEYSPEED has been removed.

Changed:
* Key repeat is now set to 500ms in Compat mode and 250ms in all other modes.

Updated:
* OOP-QR has been updated to include descriptions of more of Weave's features.
* LOOMzzt can now load .CHR and .PAL files in Windows, Mac OS, and AppImage-installed Linux.
* You can now use international characters on the Windows/Linux LOOMzzt, if your keyboard has them mapped.
* Cycle can now be set to values over 255 in LOOMzzt.

Added:
* sidebar.N.counter - Adds a custom counter to the sidebar at row N.
* Board .CHR loading - will attempt to load BOARDLBL.CHR in the same directory as the .ZZT file when switching to a board labeled :BOARDLBL.


7/16/2023: Weave 3.0k
Fixed bugs:
* Closing and reopening a ZZT world many times would cause the file handles to max out on Zeta and DOSBox, leading to errors.


4/22/2023: Weave 3.0j
Fixed bugs:
* Memory management caused a runtime error in FreeDOS when using Weave 3. Thanks to asie who took time to provide this fix.

4/13/2023: Weave 3.0i
Improvements:
* Mouse movement now correctly matches placement on screen regardless of platform.

New features:
* #Input:LMouseB and #Input:RMouseB are now sent when the Left and Right mouse buttons are pressed (Only when (M)ouse movement is disabled)

3/26/2023: Weave 3.0h
Bug fixes:
* Out-of-bounds checks for #IF BLOCKED returned FALSE instead of TRUE.

Improvements:
* COMPAT.ZZT includes more description.


3/22/2023: Weave 3.0g
Bug Fixes:
* The first world.flag defined in the .INI file was not able to be #SET or #CLEARed.
* Defining key.fg and key.bg did not correctly change the appearance of the key in the sidebar.
* In some circumstances, the @INPUT object was unable to receive messages from other objects.
* #put <dir> AMMO and #put <dir> <fg> AMMO would both fail due to AMMO counter interpolation. When parsing tiles, AMMO will always default to the element and no longer attempt to interpolate.

New Features:
* Setting predefined flags HIDELINE3 through HIDELINE24 will hide those particular lines of the sidebar until the flag is cleared.

Other Changes:
* Outside of compatibility mode, #DUPLICATE (as well as duplicator elements) will now use the PLACEABLEONTOP property to determine if the destination is eligible, similar to checks done for #SHOOT and #THROWSTAR.

3/13/2023: Weave 3.0f
Bug Fixes:
* #PLAY commands were reading garbage data from the end, resulting in some notes being incorrect.

Updates:
* Updated the WEAVEDMO.INI file to 3.0 format.

3/11/2023: Weave 3.0e
Bug Fixes:
* When using #TAKE, #GIVE, #TRY and #IF conditionals, in the event there is no followup command, a blank space would be inserted. This is no longer the case.
* #if detect player <type> was not detecting the tile underneath the player.

Updated:
* WEAVEDMO has been updated to reflect '#if detect player'.

Added:
* ZLoom2, a hacked zedit2 that uses custom text.

3/5/2023: Weave 3.0d
Bug Fixes:
* In 3.2 compatibility mode, Keys and doors were missing a space from their messages, resulting in things like TheGreen Key and TheBlue Door.

Other Changes:
* Small modifications and typo fixes in COMPAT and WEAVEDMO.

2/25/2023: Weave 3.0c
Changes:
* (W)orld selection on the title screen menu will only be removed if your WEAVEZZT.CFG indicates you're distributing a RELEASE.
* When playing .ZZT files without a .INI, a 3.2 indicator in the top corner will indicate that Compatibility Mode is on.
* WEAVEDMO has been updated to address both of the above.
* Additionally, a COMPAT.ZZT world has been added to the WEAVEDMO directory discussing and demonstrating Compatibility Mode.
* LOOMZZT is now version 1.1.3b, with a small quality-of-life fix for custom text with default color mode off. (no longer messes with the CHAR of the text, only the color.)


2/18/2023: Weave 3.0b
Fixed Bugs:
* Movement while paused would not update the player's shooting direction (used with SPACE)
* Loading a .HI file would sometimes result in the first name on the list being length 0, causing name corruption.

2/11/2023: Weave 3.0a
Removed Features:
* IS BIT#, SET BIT# and CLEAR BIT# functionality removed.
* Automatic blinking removed.
* Short counters are removed.
* obj7-obj9 are removed.
* other.flaglength is removed.
* Customizing the names of builtin counters, :ENTER, readonly counters, and @INPUT removed.

Updated Features:
* ARRAY is now able to represent and substitute values from -32766 to 32767.
* In the absence of a .INI file, WeaveZZT will not execute extended ZZT-OOP functions and instead behave as ZZT 3.2.

New Features:
* PSET now has aliases for P1, P2 and P3, and includes special syntax:
 - #PSET <dir> STEP <dir> to set step values
 - #PSET <dir> DESTINATION <boardlabel> to set passage destinations.
* Elements 128-255 are now custom text of every available non-blinking color.
 - They use the "CUSTOMTEXT" element table parameters to determine their behavior.
* OUT and XOUT permit the writing of files with #PUT instructions to replicate board contents.

Added Tools:
* LOOMZZT, a hacked version of Kevedit is now available with source code.
* WEBWEAVE, a drag-and-drop tool to publish WeaveZZT games to web, is available.
* WEBZZT32, a drag-and-drop tool to publish ZZT 3.2 games to web, is available.

Fixed Bugs:
* Change <text> <text> would change the text in question all to the same character.


12/1/2022: Weave 2.8f
Bugfixes:
* #put <dir> <element>, if blocked in <dir> by the player, would always place under the player rather than pushing the player.

11/28/2022: ​Weave 2.8e
New Features:
* ​​Load from subdirectories
    * You can now include subdirectories when you are loading a file.
    * Usage: #load i objects\myobject
* Case sensitive keybinds
    * By prepending "Shift-" to a keybind, you make it (and all other keybinds) case sensitive.
    * For explanation and example, see TEMPLATE.INI
* #FLASHINPUT command
    * Usage: #FLASHINPUT <duration>
    * Flashes all objects on the screen able to be :touch-ed (not #locked, and the :touch is not #zap-ped)
    * Continues flashing for <duration> ticks (~9 ticks = 1 second at normal speed)
* #RUNWITH + ARG readonly counter
    * Usage: #RUNWITH <value> <function>
    * Usage: #IF RUNWITH <value> <function>
    * Usage: #GIVE <counter> RUNWITH <value> <function>
    * Passes a value to a function, readable with readonly counter ARG from within the function itself.
    

11/5/2022: WeaveZZT 2.8d
New Features:
* Can load .PAL files in the same manner as .CHR files.
* SKIPTOTITLE config option now disables world menu selection.


10/31/2022: WeaveZZT 2.8c
Bug Fixes:
* The following element properties were not being picked up in the sidebar:
  * gem.fg
  * gem.bg
  * key.fg
  * key.bg
  * ammo.bg
  * torch.bg

Changes:
* Modified the player shoot sound in WEAVEDMO.


10/29/2022: WeaveZZT 2.8b
Updates:
* Updated WEAVEDMO to include all new innovations, improve descriptions, and fix bugs.

Bug Fixes:
* Added a check that will prevent an object from wrapping a large number around to a negative number (and will instead trigger a failed #give or #take)
* If error messages are suppressed (error.msg = "") and a #RUN command fails to find the appropriate .OBJ file, the object's code is no longer erased.
* #SET and #CLEAR on keys wouldn't show up in the sidebar.

Improvements:
* Instead of 64 shared custom counters/flags, there are now 99 of each.
* #color player <fg> [bg] will now change the color of the tile under the player.
* #put player <element> [color] [bgcolor] will now place that element underneath the player as well.

10/22/2022: WeaveZZT 2.8a
Bug Fixes:
* Improved #BOARD handling stops execution of object code upon changing boards.

New Features:
* .CHR files in the same directory as the .ZZT file will be loaded as charsets when loading the game.
* You can now suppress the footstep noise by setting "other.footsteps = 0" in your .CFG file.

Improvements:
* Counters can now be #SET and #CLEARed as though they were 16 flags, using bit1-bit16 addressing.

Updates:
* SoftWeave and FirmWeave are deprecated. Instead, all updates will be to Weave.
* A !HOW_TO.htm file will now be included with each download with some instructions on getting Weave to work with Zeta.

10/17/2022: FirmWeave 2.7w
Bug Fixes:
* A Conveyor would leave the stats from normally statless statted things behind.
* Blinkwall instant-kill bug from 3.2 fixed.

Improvements:
* Additional optimizations to increase speed a further 25%.


10/17/2022: FirmWeave 2.7v
Bug Fixes:
* #SHOVE could shove a statted thing onto the statless version of a normally statted element, such as a lion, and cause that lion to inconsistently come to life.


10/16/2022: FirmWeave 2.7u
Improvements:
* Greatly improved performance because asie is a kind witch

SoftWeave rc2, Fixweave 1.0g
Improvements:
* Improved file loading via an updated Advancepointer, see above


10/15/2022: FirmWeave 2.7t
Bug Fixes:
* Added a provision to require scores be > 0 to show up in the high score list

Improvements:
* ?inspect now shows an object's ARRAY value.


9/29/2022: FirmWeave 2.7s
Bug Fixes:
* BoardShoot and ElementBulletTick needed additional bounds checking, lest they accidentally check outside of memory and happen upon a random byte matching E_RICOCHET (this was happening in several contexts)

9/27/2022: FirmWeave 2.7r
Bug Fixes:
* There was no bounds checking on the following commands and conditionals:
  - #COLOR
  - #IF BLOCKED
  - #IF COLOR
  - #IF DETECT
  - #LOAD

9/15/2022: Firmweave 2.7q
Bug Fixes:
Zedit2's corrupted text (labeled "white text" and "blinking text" in zedit2) will now load in as customtext instead.


8/17/2022: FirmWeave 2.7n
Improvements:
* You can now define the character for the following elements:
   * pusher.char
   * spinninggun.char
   * object.char
   * line.char
   * transporter.char
   * counter.char
   * clockwise.char
   * star.char
   * duplicator.char


8/12/2022: FirmWeave 2.7m
Improvements:
* Elements that previously became E_EMPTY on touch now become the element of their .param3 value (still defaulting to E_EMPTY). These are:
   * ammo.param3
   * torch.param3
   * gem.param3
   * key.param3
   * door.param3
   * energizer.param3
   * forest.param3

8/9/2022: FirmWeave 2.7l
Bugs Fixed:
* #DUPLICATE was adding the object's X and Y position twice, confounding the result.
* #DIE would cause the wrong color to appear underneath the object

Improvements:
* #PUT I no longer causes an error; instead, it places the given element and color underneath the object in question. (This will not cause a stat to be created.)


7/21/2022: FirmWeave 2.7k
Added:
* TICKSPEED builtin counter that returns the current tick speed, from 1 (fastest) to 5 (normal) to 9 (slowest).
* Faster tick speeds (speed 3 and faster) will cycle bottom text every 2 ticks instead of every tick, matching normal speed cycling.
* Loading the same file, or running the same function, multiple times in a row (or recursively) will not cause a file read each time; instead it will be stored in and load from conventional memory.
* FirmWeave now reads accessibility rules and starting world from WEAVEZZT.CFG in order to eliminate conflicts with ZZT.CFG.
* You can now pre-select game speed through WEAVEZZT.CFG by adding "SPEED #" after the "ACCESSIBLE" line in the CFG file.


7/2/2022: FirmWeave 2.7i
Bugs Fixed:
* Raising the flag limit caused some flags to be set with incorrect names.
* Using #TAKE to reduce a counter by ARRAY would cause the counter to increase instead of decrease.
* Using #BOARD would cause PlayerX, PlayerY, ThisX, and ThisY to be incorrect for the remainder of the cycle.

6/22/2022: FirmWeave 2.7g
Added:
* other.flaglength configuration option that lets you set a shorter maximum flag length, giving you a higher flag limit.

6/20/2022: FirmWeave 2.7f
Fixed bugs:
* Identifying text by char via #if color was not working.

6/12/2022: FirmWeave 2.7e
Modified:
* Numbers in labels no longer behave any differently than letters in labels. 

6/8/2022: FirmWeave 2.7d
Improved:
* The /FIND direction is now substantially better at reaching its target, at the expense of being a little more chaotic.

New Features:
* You can now use SPACE to select or close text boxes.

6/8/2022: FirmWeave 2.7c
Fixed Bugs:
* The /FIND direction would struggle with wide open areas.

6/2/2022: FirmWeave 2.7b
Fixed bugs:
* Tiny hotfix for Weave. In rare circumstances, #set <counter> ARRAY would result in a large negative value. 

5/29/2022: FirmWeave 2.7
New Commands:
* #AND, the exact opposite of #ELSE - runs when the last IF statement was TRUE.
* #RUN <function>, runs the code in <function>.OBJ nonstop until the object either moves (#IDLE and /i count as movement) dies, or reaches an #END <response> command. #RUN functions can be called from within other #RUN functions, as a substitute for counter or other value, or as a conditional. Some examples:

	#RUN DEMO
This will run the contents of DEMO.OBJ.

	#GIVE AMMO RUN DEMO
This will run the contents of DEMO.OBJ and give ammo equal to the response value, passed by #END <value>.

	#IF RUN DEMO PUT N WATER
This will run the contents of DEMO.OBJ and #PUT N WATER if it reaches an #END TRUE command or an #END <value> with any positive value. It will do nothing if it reaches an #END FALSE, an #END <value> with a 0 or negative value, or if it reaches any other stopping point, such as a /i.

New Counters:
* BOARDID is a read-only counter that delivers the current board id.
* ARRAY is an object counter (like OBJ1, OBJ2 etc.) with a range of 0-127. It works in conjunction with the ^ character. If ^ is added to a #SEND label, the name of a counter, or the name of a file to be #LOAD-ed or #RUN, it will replace the ^ with whatever value is currently held in ARRAY.  Some examples:

	#SET ARRAY 5
	#SET LOCAL^ 15
This will set the LOCAL5 board counter to 15.

	#SET ARRAY 17
	#SEND OPTION^
This will send the object to the :OBJECT17 label, if it has one.

	#SET ARRAY 106
	#LOAD I EVENT^
This will replace the object's code with the contents of EVENT106.OBJ.

Improvements:
* Keys and Doors now have a "param2" parameter, which will offset each key/door character by that number. It occurred to me that people may want accessibility or key variety without the heavy-handed approach taken in the .CFG file, so this replicates that functionality with a bit more control.
* PSET can now set the object counters (obj1, obj2) of a given object, as well as set the CYCLE of any stat.

5/1/2022: FixWeave 1.0f and FirmWeave 2.6d
Bugs Fixed:
* Setting the properties of the 'EMPTY' element via CFG was not working.

4/30/2022: FixWeave 1.0f and FirmWeave 2.6d
Bugs Fixed:
* Doors and Passages would not place the correct background color if their foreground color was white.

4/27/2022: FixWeave 1.0e
Added:
* #PSET can now modify CYCLE as well as P values.
* #LOAD can now modify the contents of scrolls.

4/24/2022: FixWeave 1.0d
Bugs fixed:
* The "Bomb Activated!" config string was overwritten during the Custom OOP loader routine.
* #put <dir> <char> element worked when <char> was interpolated, but not when a bare value was used. (FixWeave and FirmWeave)

4/22/2022: 2.6a, FixWeave 1.0c
Added:
* FixWeave 1.0, allowing zzt games to be patched on-the-fly
* #PSET command allowing modification of P values

Fixed Bugs:
* Conveyors duplicating statted and nonstatted elements.

4/19/2022: 2.6rc4
Bugs Fixed:
* If you quit out and play a world again, some objects would lose their reference pointer to their code, resulting in a blank object.
* If you #board onto a new board, any walkable tile at the same X and Y as the object that issued the #board command would turn into an empty.
* Restoring saved games now correctly reflects the palette from when it was saved.

Improved:
* Quitting to title screen now restores the palette to the one in the .CFG file.

4/2/2022: 2.6rc3
Added:
* sidebar.move.msg label to customize how the word 'Move' appears on the sidebar.
* sidebar.shoot.msg label to customize how the word 'Shoot' appears on the sidebar.
* sidebar.shift.msg label to customize how the word 'Shift' appears on the sidebar.

3/18/2022: 2.6rc2
Removed:
* Object counter 10 ('OBJ10')
* Removed the following configuration options from the INI file:
  OOP.CMD.BOARD
  OOP.CMD.STEP
  OOP.CMD.COLOR
  OOP.CMD.SHOVE
  OOP.CMD.EDGE
  OOP.CMD.LOAD
  OOP.CMD.DUPLICATE
  OOP.CMD.BGPLAY
  OOP.CMD.QUICKLOAD
  OOP.CMD.QUICKSAVE
  OOP.CMD.PLAYER
  OOP.CMD.PALETTE
  OOP.COND.DETECT
  OOP.COND.RND
  OOP.COND.AT
  OOP.COND.WITHIN
  OOP.COND.COLOR
  OOP.DIR.BY
  OOP.DIR.AT
  OOP.DIR.TOWARD
  OOP.DIR.PLAYER
  OOP.DIR.TO
  OOP.DIR.FIND
* #DROP [name:]<link> is removed.
  It is now #ZAP ![name:]<link>
* #LIFT [name:]<link> is removed.
  It is now #RESTORE ![name:]<link>

Improved:
* When working with text, you can now #color <dir> <char> to change text to a specific character, or #put <dir> <char> <element> to place a specific character.
* Updated the documentation related to local object counters.
* Cleaned up the example .INI files.

Added:
* #ELSE command that will execute the code that follows provided the most recent #IF condition run by that object failed.


3/15/2022: 2.6
Bugs Fixed:
* SoftWeave: the 'Pushable' attribute in .CFG files did not lead to elements being pushable.
* SoftWeave: Some CFG element definitions did not read negative numbers.


3/9/2022: 2.6
Bugs Fixed:
* Some CFG element definitions (like .cycle) did not read negative numbers.

Added:
* Added Object counters 6-10 with a range of 127 to -128.



2/26/2022: 2.5p
Added:
* ?PATH cheat that shows where the player has been and approximately the time the player has taken (by acquiring the leftmost bit of the board's "Tick" value).


2/24/2022: 2.5n
Improved:
* Stats passing over walkable text will now acquire the text's background color and not a random one based on the text character.


2/17/2022: 2.5m
Improved:
* The mousex and mousey read-only counters are collected whether or not mouse movement is enabled.
* SkipToTitle no longer automatically enables mouse movement.

2/15/2022: 2.5k
Added:
* SKIPTOTITLE accessibility option in zzt.cfg skips directly to the title screen of the given zzt file.

Improved:
* Merged asie's UPX code so UPX is now being used to compress ZZT.EXE.

2/10/2022: 2.5j
Bugs Fixed:
* Removed another reference to .PAR files in FIRMDEMO.

Improved:
* Merged Asie's improved Classiczoo video rendering code.
* Updated the README.

2/8/2022: 2.5i
Bugs Fixed:
* When executing #load i <file>, the first line of code would be skipped.


2/8/2022: 2.5h
Bugs Fixed:

* Uploaded the wrong ElementPlayerTick code back when creating #lock player and an older version of that code survived. This verison now correctly allows the player to mute music and still use 'Q' to quit, in addition to Escape.

2/7/2022: 2.5g
Fixed:
* FIRMDEMO still had multiple references to .PAR files.
* #BECOME <color> black <element> was not correctly setting the black background.

2/6/2022: 2.5f
Fixed:
* Switched most file loading to use FileExists before attempting to load a given file.
* Board local flags were still offset by 1.
* param3 attribute description was flipped in .CFG template.

2/5/2022: 2.5e
Added:
* Readonly THISX and THISY counters to get the object's current position.
* #SEND /dir label to direct a label at a particular location
* bullet.param3 to allow objects to shoot player bullets, if desired.


2/5/2022: 2.5d
Bugs Fixed:
* The offsets for custom counters were off by six. They've been replaced with const values.


2/5/2022: 2.5c
Bugs Fixed:
* Naming a counter the same name as an element (e.g. 'ammo') meant that #PUT and #CHANGE would default to element 46 unless both a foreground and background color were specified.

Added:
* Since Element 46 isn't going anywhere, decided to make it a custom text element CUSTOMTEXT that can be defined in the .CFG file and used in-game.

Improved:
* Added instructions to the .CFG files for VisibleInDark and Pushable element properties.

2/2/2022: 2.5b
Bugs Fixed:
* Bullets decreasing currentStatTicked twice on death is now fixed in FirmWeave as well.

= 1/30/2022: 2.5a
Bugs Fixed:
* Conveyors were not working properly in either Soft or Firm weave after 2.5; this is fixed.

Added Features:
* New read-only counters for the player and mouse positions on screen: playerx, playery, mousex, mousey.

= 1/28/2022: 2.5 (Release!)
Bugs Fixed:
* Behavior of player clones was not correct. (FirmWeave and SoftWeave)
* When paused, in some cases objects would skip executing on the tick when P was pressed.

Improvements:
* #LOAD now allows appending of files. 




= 1/23/2022: 2.5 rc4
Bugs Fixed:
* Off-by-one error in board and object locals.

Improvements:
* Board locals increased to 7.

= 1/18/2022: 2.5 rc3
Bugs Fixed:
* DUPLICATE was not correctly adjusting AT <x> <y> for the relative position of the duplicator and duplicatee. STEP and SHOVE were correct but needed cleaning up as well.

= 1/17/2022: 2.5 rc2
Bugs Fixed:
* Scroll movement bug (Firm and Soft)
* Conveyor draw bug (Soft)
* Conveyor destruction bug (Soft)
* Binders Keepers (Soft)
* Recursive movement push crash (Soft)

Added:
* /FIND direction with limited BFS pathfinding. Circular frontier of radius 7. Diagonal searching only. (Firm)

= 1/15/2022: 2.5 rc1
Improved:
* .CFG files now share all functionality and formatting between soft and firm, including text properties, grace period, key limit.
* .CFG and .PAR files have been consolidated into one file. (.CFG)
* .OOP, .KB and .FLG files have been consolidated into one file. (.INI)
* Configs are now in a TOML-like format.
* Configs no longer depend on file order and need only include the items being changed.
* OOB checking is done on some ElementTick operations in SoftWeave. (those that don't rely on MoveStat)
* .CFG files can modify ALL element definitions. (element.property addressing)
* Objects have up to 6 internal flags and boards have 3 local flags.

= 1/14/2022: 2.2e
Bugs Fixed:
* Negative PAR numbers less than 16 were mistakenly being treated as colors.
* Bullets were decreasing currentStatTicked twice on death, leading to time warps for preceding stats.


= 1/6/2022: 2.2d
Bug Fixed:
 * BOARD would sometimes cause
an object with the same stat # as the object calling BOARD to
#END prematurely.

Improved:
 * Spaces and non-alphanumeric characters in Keybinds will still show up in the sidebar but will be excluded from the label  sent, e.g. a keybind labeled "Foo-bar Gun" will send the label ":foobargun" when triggered.

= 1/3/2022: 2.2c
Bug Fixed:
 * SHOVE allowed you to shove objects past the southern border.
 * SHOVE destroyed tiles being shoved on top of the player if the player was otherwise blocked and couldn't be pushed.

Improved:
 * .PAR files updated to 2.2-firm-c and 2.2-soft-c, with altered X and Y values for torches and bombs (drawX and drawY have been replaced with ratioX and ratioY for elliptical control)

= 1/2/2022: 2.2b
Bugs Fixed:
 * ElementBombDraw wasn't pulling the correct char from the .PAR file.  It is now.

Added:
 * Added the ability to configure which element is visible in dark. Defauts to torch.

Improved:
 * Expanded the capacity of '#if detect player' to check under the player, similar to '#if detect i' checking under the object.

= 1/1/2022: 2.2a
Bugs Fixed:
 * Using #EDGE to set a board edge, if set to a board whose label doesn't exist, would set the eastern neighbor to board -1, with unexpected consequences.

Improved:
 * #EDGE and #BOARD now accept counters as board names.  The board linked or sent to will be the value of the counter.
 * #EDGE will now throw an error if a nonexistent board is chosen or a direction without a neighbor such as <BY 1 3>

= 12/29/2021: 2.2
Added:
 * You can now force the game to start on a specific board via an option in the .PAR file. (also in Softweave)
 * New direction, /to <dir1> <dir2> which is the tile in the <dir2> direction from <dir1>. See the FIRMDEMO for details.
 * Added new global parameter KEYSPEED that sets the delay before key repeat to faster or slower.

= 12/28/2021: 2.1a
Added:
 * ?stats cheat to read board stats
 * ?nozap cheat to disable 're-enter when zapped'
 * ?flags cheat to list all flags and custom parameters
 * 'ACCESSIBLE' can be added to ZZT.CFG (where 'REGISTERED' was previously) to enable ACCZZT options on startup.
 * Underneath the word ACCESSIBLE in ZZT.CFG, the accessibility options can be pre-set: 'NEUROMOTORASSIST' for neuromotor assistance, 'VISUALSOUND' for visualized sound information, and/or 'KEYSHAPES' for distinct key shapes. If pre-set, accessibility options will not be asked for each startup. 'NONE' can also be used to skip the dialog entirely.

Improved:
 * ?inspect cheat now reads local object counters, P values, Step values, and Cycle.
 * Text windows now match the sidebar theme. (Also in SoftWeave)

Other:
 * ZZT.DAT is not longer built, loaded, or included with FirmWeave; instead the ABOUT.HLP is baked into the executable.
 * The ABOUT.HLP screen will not initially appear if a ZZT filename is passed as a command line argument.
 * The ABOUT.HLP screen will not initially appear if run from Zeta with the Zeta .EXE renamed to the same name as the ZZT file.

= 12/27/2021: 2.1
 New version - Weave features are frozen, apart from the addition of more ?cheats, and restoring the accessibility modes from ACCZZT.

Improved:
 * ?+DEBUG mode now provides significantly more feedback on object errors than previously, including showing the specific line where the error occurred.
 * Many more errors are surfaced by the engine when data is out of bounds or when OOP can't be interpreted.

Bugs Fixed:
 * Conveyor destruction bug.
 * Passages next to one another destruction bug.
 * Passages create holes in fakes on enter and exit bug.
 * Passages change color inappropriately bug.
 * Removed the discrepancy between TTextWindow's line length (58) and the strings it's supposed to hold (50).
 * Fixed memory leak in AddStat.
 * Adjusted file loading so that zedit2 can effectively load FirmWeave for testing, and running zeta with -t does not produce visual errors in the sidebar for games whose theme has changed.

Added:
 * Palette loading in .PAR file.
 * Palette modification through #palette OOP command.
 * Unnamed Object and Scroll header modificaiton now available in .CFG file. (also in SoftWeave)

Other:
 * Removed /R and /T flags from ZZT.EXE argument parsing. Now only the name of a ZZT file may be passed.
 * Removed all references to registration, including reading the .CFG file 'REGISTERED' line.

= 12/24/2021: 2.0h
Improved:
 * Quicksave and Quickload now have entries in the Demo.
 * Quicksave and Quickload can now specify a filename, allowing games to carry multiple save slots.
 * Keyboard inputs are now channeled through the Input Terminal, a named object that recieves incoming messages from the keyboard.
 * A demo entry for the Keyboard Terminal has been created.

Added:
 * A blank centered line ('$') by itself will clear the message buffer.

= 12/23/2021: 2.0g
Added:
* #LOCK <dir> allows you to #LOCK objects remotely in the direction of <dir>.
* #UNLOCK <dir> similarly lets you #UNLOCK objects remotely
* #LOCK <dir> and #UNLOCK <dir> also work on the player. So #LOCK PLAYER and #UNLOCK PLAYER work as expected.
* ?NOCLIP cheat allows player to move anywhere, and ?CLIP lets the player clip back into the world.
* ?FREE cheat allows a #LOCKed player to freely move again.

Improved:
* PAR files are updated to 2.0g, including the ability to set the health of projectiles (which determines their lifespan), and how much their health drains per cycle (stars 1, bullets 0)

Other:
* Project name has been shortened to "Weave".

= 12/22/2021: 2.0f
Added cheats:
* ?inspect cheat makes the next object you touch reveal its code.
* ?speed cheat lets you set game speed in-game.
* ?board cheat lets you move to a different board.
* ?nodmg cheat causes the player to take no damage from bullets, bombs, or enemies.

Improved:
* Anywhere you could list a color (#PUT #CHANGE etc) you can now use a number (0-15) or a counter.
* Player input now locks out on the last grace frame, ensuring all stats execute at least once before #endgame.

Bug Fixes:
* Fixed bottom row #PUT bug.
* Players with default black BG no longer inherit background colors as they move. (Firm)
* Players with default black BG no longer inherit background colors as they move. (Soft)
* #change black <element> now correctly targets only <element> with a black foreground.
* DisplayMessage no longer delays 1 tick before showing up.

= 12/20/2021: 2.0e
New Functions:
* #PLAYER <color> <bgcolor> <char> permanent player color + char
* #PLAYER 0 0 0 restore .PAR default
* #TAKE <counter> [label] will attempt to take 1 of the counter
* #GIVE <counter> will give 1 of the counter
* #IF COLOR <dir> <color> [background color] conditional
* #DIE ITEM relocates player to object location after stat removal

Improved:
* Versions added to config files
* Extend CFG parsing from 50 to 80 chars
* Added zedit2 Alt-T compat

Bug Fixes:
* Empty strings passed to SoundParse will no longer interfere with SoundQueue
* Empty strings in Oop files will now be properly counted as _nil.
* Some unstatted objects would acquire unwelcome backgrounds whilst SHOVEd.

= 12/19/2021
Initial release
