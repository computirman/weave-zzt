#Template OOP file
#  -------------
#           !!! IMPORTANT !!!
# Any line starting with a '#' is a comment.
# If you remove lines that don't start with '#',
# you WILL screw up your file.
#          You have been warned.
#  -------------
#How to Use:
#Copy TEMPLATE.OOP to <YOURZZT>.OOP and
#follow the instructions below to add new
#functions to ZZT.  If you want to add
#all available functions, instead copy
#EXTENDED.OOP to <YOURZZT>.OOP and follow
#the instructions there to customize your
#setup.
#  -------------
#  NEW COMMANDS
#  -------------
#By changing the values below you can add
#new OOP commands to ZZT.
# ---- BOARD command
# Usage:
#        #board <label> [X] [Y]
# Transports the player to the first board in the
# board list whose name begins with ':label;',
# and optionally moves that player to location
# X, Y on the new board.
# Set to BOARD below to add to OOP:
_nil
# ---- STEP command
# Usage:
#        #step <direction1> <direction2>
# Looks for a stat at <direction1>. If found,
# sets its step values to <direction2>.
# Set to STEP below to add to OOP:
_nil
# ---- COLOR command
# Usage:
#        #color <direction> <color> [bgcolor]
# Changes the color at <direction> to <color>.
# <direction> can be 'I' to color self. Can add
# an optional background color.
# Color List - The following can be either
# foreground (fg) or background (bg) colors:
#    Black, DkBlue, DkGreen, DkCyan,
#    DkRed, DkPurple, Brown, Gray
# The following can be foreground colors only:
#    DkGray, Blue, Green, Cyan,
#    Red, Purple, Yellow, White
# Set to COLOR below to add to OOP:
_nil
# ---- SHOVE command
# Usage:
#        #shove <direction1> <direction2>
# Takes whatever is found at <direction1> and
# shoves it in <direction2>. This will push
# anything pushable located there as well.
# Set to SHOVE below to add to OOP:
_nil
# ---- EDGE command
# Usage:
#        #edge <direction> <label>
# Connects the board edge at <direction> with
# the first board in the board list whose name
# begins with ':label;'.
# Set to EDGE below to add to OOP:
_nil
# ---- DROP command
# Usage:
#        #drop <link>
# Like ZAP, finds the first instance of !link;
# and replaces the ! with a comment character.
# Set to DROP below to add to OOP:
_nil
# ---- LIFT command
# Usage:
#        #lift <link>
# Finds the first dropped instance of
# @link (see below) and changes it back
# to !link.
# Set to LIFT below to add to OOP:
_nil
# ---- Pre-dropped link character
# Like pre-zapped labels, use this character
# to create pre-dropped links. Maximum length
# 1 character. This line cannot be _nil.
@
#  -------------
#  NEW CONDITIONS
#  -------------
#By changing the values below you can add
#new options for #IF <condition> in ZZT.
# ---- DETECT condition
# Usage:
#        #if detect <direction> <type>
# True if <type> can be found at <direction>.
# if <direction> is 'i', then looks underneath
# the object (for a certain color fake, for
# example)
# Set to DETECT below to add to OOP:
_nil
# ---- RND condition
# Usage:
#        #if rnd
# True 50% of the time. Useful for random events
# that don't depend on BLOCKED.
# Set to RND below to add to OOP:
_nil
# ---- AT condition
# Usage:
#        #if at <X> <X>
# True if the object is currently located at
# X, Y on the board.
# Set to AT below to add to OOP:
_nil
# ---- WITHIN condition
# Usage:
#        #if within <radius>
# True if the object is within <radius> of the
# player. Roughly circular detection.
# Set to WITHIN below to add to OOP:
_nil
#  -------------
#  NEW DIRECTIONS
#  -------------
#By changing the values below you can add
#new directions for /, ?, and other movement
#commands in ZZT.
# ---- BY direction
# Usage:
#        /by <deltaX> <deltaY>
# Moves the object to position <deltaX>, <deltaY>
# relative to itself. Negative values of <deltaX>
# will move the object west, and negative values
# of <deltaY> will move the object north.
# Set to BY below to add to OOP:
_nil
# ---- AT direction
# Usage:
#        /at <X> <Y>
# Moves the object to absolute position X, Y
# on the board.
# Set to AT below to add to OOP:
_nil
# ---- TOWARD direction
# Usage:
#       /toward <x> <y>
# Similar to SEEK, moves the object toward
# absolute position <x> <y> on the board.
# Set to TOWARD below to add to OOP:
_nil
# ---- PLAYER direction
# Usage:
#        /player
# Moves the object directly on top of the
# player. Combine with #shoot to damage the
# player from anywhere on the board.
# set to PLAYER below to add to OOP:
_nil
#  -------------
#  NEW COUNTERS
#  -------------
#Change the settings below to provide objects
#with access to additional default counters.
# ---- 
# Represents energizer ticks.
ENERGIZED
# Represents torch ticks.
WICK
# Represents board darkness.
ISDARK
# Blue Key (set to BLUEKEY to add to OOP):
_nil
# Green key (set to GREENKEY to add to OOP):
_nil
# Cyan key (set to CYANKEY to add to OOP):
_nil
# Red key (set to REDKEY to add to OOP):
_nil
# Purple key (set to PURPLEKEY to add to OOP):
_nil
# Yellow key (set to YELLOWKEY to add to OOP):
_nil
# White key (set to WHITEKEY to add to OOP):
_nil
#  -------------
#  OTHER
#  -------------
# Below are some other available settings.
# ---- RANDOM
# Usage:
#        #give ammo random <#> <#>
# wherever a number can be used in ZZT-OOP, you
# can substitute 'RANDOM <#> <#>' and the result
# will be a random value between the two numbers.
# Set to RANDOM to add to OOP:
_nil
# ---- ENTER
# Usage:
#        :enter
# Sent to all objects when the player enters
# the room. Similar to SuperZZT.
# Set to ENTER to add to OOP:
_nil
# ---- LOAD
# Usage:
#        #load <file>
# Loads <file>.OBJ as OOP code and executes it.
# Set to LOAD to add to OOP:
_nil
# ---- DUPLICATE
# Usage:
#        #duplicate <dir1> <dir2>
# Duplicates from source <dir1> to
# destination <dir2>.
# Set to DUPLICATE to add to OOP:
_nil
# ---- BGPLAY
# Usage:
#        #bgplay <sound>
# Plays a sound on the sound effects channel
# (does not queue like #play, other sounds will
# override it).
# Set to BGPLAY to add to OOP:
_nil
# ---- QUICKLOAD
# Usage:
#        #quickload
# Loads the last available save game. If no
# game has been saved, opens the game restore
# dialog.
# Set to QUICKLOAD to add to OOP:
_nil
# ---- QUICKSAVE
# Usage:
#        #quicksave
# Saves over the current save game. If no game
# has been saved yet, saves <FILENAME>.SAV
# instead.
# Set to QUICKSAVE to add to OOP:
_nil
# ---- INTERPOLATION
# Usage:
#        #set <counter> <#>
#        #clear <counter>
#        #if <counter> ABOVE <#>
#        #if <counter> BELOW <#>
#        #if <counter> IS <#>
#        #if not <counter>
#Allows counters to be used for much more than
#just GIVE and TAKE. Cannot be disabled in v2.0.
ON