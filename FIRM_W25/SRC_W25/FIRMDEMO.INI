#Extended INI file
# Version 2.5
#  -------------
#How to Use:
#Copy EXTENDED.INI to <YOURZZT>.INI and
#all functions demonstrated in FIRMDEMO will
#be made available to your ZZT file. If you
#want to change the names of any of the new
#functions, you can do so below.
#  ------------------------------------------
#              EXPANDED ZZT-OOP
#  ------------------------------------------
#  -------------
#  NEW COMMANDS
#  -------------
#By changing the values below you can rename
#the new OOP commands added to ZZT.
# ---- BOARD command
# Usage:
#        #board <label> [X] [Y]
# Transports the player to the first board in the
# board list whose name begins with ':label;',
# and optionally moves that player to location
# X, Y on the new board.
# You can rename the BOARD command below:
oop.cmd.board = "BOARD"
# ---- STEP command
# Usage:
#        #step <direction1> <direction2>
# Looks for a stat at <direction1>. If found,
# sets its step values to <direction2>.
# You can rename the STEP command below:
oop.cmd.step = "STEP"
# ---- COLOR command
# Usage:
#        #color <direction> <color> [bgcolor]
# Changes the color at <direction> to <color>.
# <direction> can be 'I' to color self. Can add
# an optional background color.
# Color List - The following can be either
# foreground (fg) or background (bg) colors:
#    Black, DkBlue, DkGreen, DkCyan,
#    DkRed, DkPurple, Brown, Gray
# The following can be foreground colors only:
#    DkGray, Blue, Green, Cyan,
#    Red, Purple, Yellow, White
# You can rename the COLOR command below:
oop.cmd.color = "COLOR"
# ---- SHOVE command
# Usage:
#        #shove <direction1> <direction2>
# Takes whatever is found at <direction1> and
# shoves it in <direction2>. This will push
# anything pushable located there as well.
# You can rename the SHOVE command below:
oop.cmd.shove = "SHOVE"
# ---- EDGE command
# Usage:
#        #edge <direction> <label>
# Connects the board edge at <direction> with
# the first board in the board list whose name
# begins with ':label;'.
# You can rename the EDGE command below:
oop.cmd.edge = "EDGE"
# ---- DROP command
# Usage:
#        #drop <link>
# Like ZAP, finds the first instance of !link;
# and replaces the ! with a comment character.
# You can rename the DROP command below:
oop.cmd.drop = "DROP"
# ---- LIFT command
# Usage:
#        #lift <link>
# Finds the first dropped instance of
# @link (see below) and changes it back
# to !link.
# You can rename the LIFT command below:
oop.cmd.lift = "LIFT"
# ---- Pre-dropped link character
# Like pre-zapped labels, use this character
# to create pre-dropped links. Maximum length
# 1 character. This line cannot be _nil.
oop.droppedlink = "@"
#  -------------
#  NEW CONDITIONS
#  -------------
#By changing the values below you can
#changethe names given to all the new
#options for #IF <condition> in ZZT.
# ---- DETECT condition
# Usage:
#        #if detect <direction> <type>
# True if <type> can be found at <direction>.
# if <direction> is 'i', then looks underneath
# the object (for a certain color fake, for
# example)
# You can rename the DETECT condition below:
oop.cond.detect = "DETECT"
# ---- RND condition
# Usage:
#        #if rnd
# True 50% of the time. Useful for random events
# that don't depend on BLOCKED.
# You can rename the RND condition below:
oop.cond.rnd = "RND"
# ---- AT condition
# Usage:
#        #if at <X> <X>
# True if the object is currently located at
# X, Y on the board.
# You can rename the AT condition below:
oop.cond.at = "AT"
# ---- WITHIN condition
# Usage:
#        #if within <radius>
# True if the object is within <radius> of the
# player. Roughly circular detection.
# You can rename the WITHIN condition below:
oop.cond.within = "WITHIN"
#  -------------
#  NEW DIRECTIONS
#  -------------
#By changing the values below you can rename
#the new directions for /, ?, and other 
#movement in ZZT.
# ---- BY direction
# Usage:
#        /by <deltaX> <deltaY>
# Moves the object to position <deltaX>, <deltaY>
# relative to itself. Negative values of <deltaX>
# will move the object west, and negative values
# of <deltaY> will move the object north.
# You can rename the BY direction below:
oop.dir.by = "BY"
# ---- AT direction
# Usage:
#        /at <X> <Y>
# Moves the object to absolute position X, Y
# on the board.
# You can rename the AT direction below:
oop.dir.at = "AT"
# ---- TOWARD direction
# Usage:
#       /toward <x> <y>
# Similar to SEEK, moves the object toward
# absolute position <x> <y> on the board.
# You can rename the TOWARD direction below:
oop.dir.toward = "TOWARD"
# ---- PLAYER direction
# Usage:
#        /player
# Moves the object directly on top of the
# player. Combine with #shoot to damage the
# player from anywhere on the board.
# You can rename the PLAYER direction below:
oop.dir.player = "PLAYER"
# ---- TO direction
# Usage:
#        /to <dir1> <dir2>
# Targets a destination that is in the <dir2>
# direction from <dir1>; for example,
# "/to player n" would relocate the object
# to the player's north.
# You can rename the TO direction below:
oop.dir.to = "TO"
# ---- FIND direction
# Usage:
#        /find <x> <y>
# Similar to TOWARD, moves the object toward
# absolute position <x> <y> on the board.
# Employs limited pathfinding to get around
# obstacles.
# You can rename the FIND direction below:
oop.dir.find = "FIND"
#  -------------
#  NEW COUNTERS
#  -------------
#Change the settings below to rename the new
#default counters your objects can access.
# ---- 
# Represents energizer ticks.
counter.energized = "ENERGIZED"
# Represents torch ticks.
counter.wick = "WICK"
# Represents board darkness.
counter.isdark = "ISDARK"
# Blue Key:
counter.bluekey = "BLUEKEY"
# Green key:
counter.greenkey = "GREENKEY"
# Cyan key:
counter.cyankey = "CYANKEY"
# Red key:
counter.redkey = "REDKEY"
# Purple key:
counter.purplekey = "PURPLEKEY"
# Yellow key:
counter.yellowkey = "YELLOWKEY"
# White key:
counter.whitekey = "WHITEKEY"
#  -------------
#  OTHER
#  -------------
# Below are some other available settings.
# ---- RANDOM
# Usage:
#        #give ammo random <#> <#>
# wherever a number can be used in ZZT-OOP, you
# can substitute 'RANDOM <#> <#>' and the result
# will be a random value between the two numbers.
# You can rename RANDOM below:
counter.random = "RANDOM"
# ---- ENTER
# Usage:
#        :enter
# Sent to all objects when the player enters
# the room. Similar to SuperZZT.
# You can rename the ENTER label below:
oop.msg.enter = "ENTER"
# ---- LOAD
# Usage:
#        #load <file>
# Loads <file>.OBJ as OOP code and executes it.
# You can rename the LOAD command below:
oop.cmd.load = "LOAD"
# ---- DUPLICATE
# Usage:
#        #duplicate <dir1> <dir2>
# Duplicates from source <dir1> to
# destination <dir2>.
# You can rename the DUPLICATE command below:
oop.cmd.duplicate = "DUPLICATE"
# ---- BGPLAY
# Usage:
#        #bgplay <sound>
# Plays a sound on the sound effects channel
# (does not queue like #play, other sounds will
# override it).
# You can rename the BGPLAY command below:
oop.cmd.bgplay = "BGPLAY"
# ---- QUICKLOAD
# Usage:
#        #quickload
# Loads the last available save game. If no
# game has been saved, opens the game restore
# dialog.
# You can rename the QUICKLOAD command below:
oop.cmd.quickload = "QUICKLOAD"
# ---- QUICKSAVE
# Usage:
#        #quicksave
# Saves over the current save game. If no game
# has been saved yet, saves <FILENAME>.SAV
# instead.
# You can rename the QUICKSAVE command below:
oop.cmd.quicksave = "QUICKSAVE"
# ---- PLAYER
# Usage:
#        #player <color> <bgcolor> <char>
# Modifies how the player is displayed in-game.
# Must specify all three. Use #player 0 0 0
# to revert the player to the settings in the
# .CFG file.
# You can rename the PLAYER command below:
oop.cmd.player = "PLAYER"
# ---- COLOR condition
# Usage:
#        #if color <dir> <color> [background color]
# True if the location at <dir> is a match for
# <color>. Alternately a <background color> can also
# be selected.
# You can rename the COLOR condition below:
oop.cond.color = "COLOR"
# ---- PALETTE command
# Usage:
#        #palette <color> <r> <g> <b>
# Sets the palette for the given <color>. The
# <r>, <g>, <b> values must be ranged from 0-63.
# You can rename the PALETTE command below:
oop.cmd.palette = "PALETTE"
# ---- TO direction
# Usage:
#        /to <dir1> <dir2>
# Targets a destination that is in the <dir2>
# direction from <dir1>; for example,
# "/to player n" would relocate the object
# to the player's north.
# You can rename the TO direction below:
oop.dir.to = "TO"
# ---- KEYSPEED counter
# Usage:
#        #set keyspeed <speed>
# Sets the key repeat speed. Range of -2 to 1,
# with 1 being fastest and 0 being normal.
# You can rename the KEYSPEED counter below:
counter.keyspeed = "KEYSPEED"
# ---- INTERPOLATION
# Usage:
#        #set <counter> <#>
#        #clear <counter>
#        #if <counter> ABOVE <#>
#        #if <counter> BELOW <#>
#        #if <counter> IS <#>
#        #if not <counter>
#Allows counters to be used for much more than
#just GIVE and TAKE. Cannot be disabled in v2
oop.interpolation = "true"
#  ------------------------------------------
#              CUSTOM KEY BINDS
#  ------------------------------------------
#Edit the values below to add custom key binds.
#Note: Key binds are available on a first come,
#  first served basis. System keys such as Q
#  come first, followed by the standard defined
#  keys found in the TEMPLATE.CFG file, followed
#  by the definitions below.
#  -------------
#  IMPORTANT: INPUT TERMINAL
#  -------------
# The Input Terminal is the name of the object
# where all readable key input will come in. This
# includes all the key binds below, plus:
#     :UP for an up keypress,
#     :DOWN for a down keypress,
#     :LEFT for a left keypress,
#     :RIGHT for a right keypress,
#     :SHIFTUP for shift+up keypress,
#     :SHIFTDOWN for a shift+down keypress,
#     :SHIFTLEFT for a shift+left keypress,
#     :SHIFTRIGHT for a shift+right keypress.
# Specify the name of your Input Terminal below,
# or set to _nil for no special keyboard input.
input.terminal = "INPUT"
# Key bind (1 of 8)
#  The key to press (this can be any character
#    you can type on your keyboard. Leave blank
#    to disable. Maximum length 1 character.)
input.1.keybind = "I"
#  The message to send. This is the label sent to
#    your Input Terminal (above) upon pressing the
#    key. Maximum length: 12 characters.)
input.1.label = "Inventory"
#  The row to populate in the sidebar. (Set
#  to "0" to not show the keybind in the sidebar.
#  This is a string value, so keep the quotes.)
input.1.sidebar.row = "16"
### Uncomment additional keybinds below, if needed:
#input.2.keybind = ""
#input.2.label = ""
#input.2.sidebar.row = "0"
#input.2.keybind = ""
#input.2.label = ""
#input.3.sidebar.row = "0"
#input.4.keybind = ""
#input.4.label = ""
#input.4.sidebar.row = "0"
#input.5.keybind = ""
#input.5.label = ""
#input.5.sidebar.row = "0"
#input.6.keybind = ""
#input.6.label = ""
#input.6.sidebar.row = "0"
#input.7.keybind = ""
#input.7.label = ""
#input.7.sidebar.row = "0"
#input.8.keybind = ""
#input.8.label = ""
#input.8.sidebar.row = "0"
#  ------------------------------------------
#           CUSTOM FLAGS AND COUNTERS
#  ------------------------------------------
#Follow the instructions below to create
#custom flags and counters.
#20 character limit per flag/counter.
#  -------------
#  BOARD COUNTERS
#  ---
#Define up to three custom board counters below. You
#can GIVE and TAKE them like any other counter.
#Every board has their own copies of these.
flag.board.1 = "LOCAL"
#flag.board.2 = ""
#flag.board.3 = ""
#  -------------
#  OBJECT COUNTERS
#  ---
#Define up to 6 custom object counters below. Every
#object has their own copies of these.
flag.obj.1 = "OBJ1"
flag.obj.2 = "OBJ2"
flag.obj.3 = "OBJ3"
flag.obj.4 = "OBJ4"
#flag.obj.5 = ""
#flag.obj.6 = ""
#  -------------
#  WORLD FLAGS / COUNTERS
#  ---
#Custom Flags:
#if you define a custom flag below, you
#can SET and CLEAR that flag in-game without
#using up one of your ten flag slots.
# ---
#Custom Counters:
#if you define a custom counter below, you
#can GIVE and TAKE it just like any other
#in-game counter.
# ---
#Limits:
#The total number of flags and counters below
#should add up to no more than 64.
#  -------------
#Custom Flags
world.flag = "flag1"
world.flag = "flag2"
world.flag = "flag3"
#Custom counters
world.counter = "counterX"
world.counter = "counterY"
world.counter = "counterZ"